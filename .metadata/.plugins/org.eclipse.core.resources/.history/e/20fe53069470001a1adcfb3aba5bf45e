package brickBrcker;
import javax.swing.*;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.Timer;

import javax.swing.JPanel;

// making Gameplay object to a panel
public class Gameplay extends JPanel implements KeyListener, ActionListener{
	private boolean play = false;
	private int score = 0;
	
	private int totalBricks = 21;
	
	private Timer timer;
	private int delay = 8;
	
	private int playerX = 310;
	
	private int ballposX = 120;
	private int ballposY = 350;
	
	private int ballXdir = -1;
	private int ballYdir = -2;
	
	public Gameplay() {
		addKeyListener(this);
		setFocusable(true);
		setFocusTraversalKeysEnabled(false);
		timer = new Timer(delay, this); //we using diffrent timer so util.timer will not work
		timer.start();
	}
	
	public void paint (Graphics g) {
		//background 
		g.setColor(Color.black);
		g.fillRect(1, 1, 692, 592);
		
		//border
		g.setColor(Color.yellow);
		g.fillRect(0, 0, 3, 592);
		g.clearRect(0, 0, 692, 3);
		g.fillRect(691, 0, 3, 592);
		
		//the paddle
		
		g.setColor(Color.green);
		g.fillRect(playerX, 550, 100, 8);
		
		//the boll
		
		g.setColor(Color.yellow);
		//g.fillRect(ballposX, ballposY, 20, 20);
		g.fillOval(ballposX, ballposY, 20, 20);
		
		g.dispose();
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		timer.start();
		
		//to chenge the ball derection
		if (play) {
			
			// ball derection change when touch with paddle
			if(new Rectangle(ballposX, ballposY, 20, 20).intersects(new Rectangle(playerX, 550, 100, 8))) {
				ballYdir = -ballYdir;
			}
			
			ballposX += ballXdir; //ball direction
			ballposY += ballYdir; //ball direction
			if (ballposX <0 ) {
				ballXdir = -ballXdir; //ball direction
			}
			if (ballposY <0 ) {
				ballYdir = -ballYdir; //ball direction
			}
			if (ballposX > 670 ) {
				ballYdir = -ballXdir; //ball direction
			}
		}
		
		repaint();  //it will recall the paint method and drow everything again
	}
	
	@Override
	public void keyTyped(KeyEvent e) {}
	
	@Override
	public void keyReleased(KeyEvent e) {}
	
	

	@Override
	public void keyPressed(KeyEvent e) {
		if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
			if(playerX >=600) {
				playerX = 600;
				} else {
					moveRight();
				}	
			}
			if(e.getKeyCode() == KeyEvent.VK_LEFT) {
				if(playerX < 10) {
					playerX = 10;
				} else {
					moveLeft();
				}	
			}
	}
	private void moveRight() {
		play = true;
		playerX+=20; // increminting the playerx 
	    }
	
	private void moveLeft() {
		play = true;
		playerX-=20; // increminting the playerx 
	}
	

	//https://www.youtube.com/watch?v=K9qMm3JbOH0  untill 20 min
	
}
